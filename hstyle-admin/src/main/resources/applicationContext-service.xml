<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
            http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd"
	default-lazy-init="true">

	<!-- =================================================================== -->
	<!-- AOP: Configuration and Aspects -->
	<!-- =================================================================== -->
	<aop:config>
		<aop:advisor id="managerTx" advice-ref="txAdvice"
			pointcut="execution(* *..service..*.*(..))" order="0" />
	</aop:config>

	<!-- Enable @Transactional support -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- Enable @AspectJ support -->
	<aop:aspectj-autoproxy />

	<!-- Activates scanning of @Autowired -->
	<context:annotation-config />

	<!-- Activates scanning of @Service -->
	<context:component-scan base-package="com.hstyle.admin.service" >
	   <context:include-filter type="annotation" expression="org.aspectj.lang.annotation.Aspect" />
    </context:component-scan>

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true" />
			<tx:method name="find*" read-only="true" />
			<tx:method name="search*" read-only="true" />
			<tx:method name="query*" read-only="true" />
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>

	<!-- 使用缓存annotation 配置 -->
	<cache:annotation-driven cache-manager="ehCacheManager" />

	<!-- spring对ehcache的缓存工厂支持 -->
	<bean id="ehCacheManagerFactory"
		class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="configLocation" value="classpath:ehcache.xml" />
		<property name="shared" value="false" />
	</bean>

	<!-- spring对ehcache的缓存管理 -->
	<bean id="ehCacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">
		<property name="cacheManager" ref="ehCacheManagerFactory"></property>
	</bean>
	<!-- spring辅助类，运行时获取bean -->
    <bean class="com.hstyle.framework.utils.SpringContextUtil" lazy-init="false"></bean>
    <!-- properties工具类 -->
    <bean id="propertiesLoader" class="com.hstyle.framework.utils.PropertiesLoader" lazy-init="false">
      <constructor-arg>
        <list>
           <value>classpath:/sysinfo.properties</value>
        </list>
      </constructor-arg>
    </bean>
     <!-- Activiti begin -->
    <!-- <bean id="processEngineConfiguration" class="org.activiti.spring.SpringProcessEngineConfiguration">
        <property name="dataSource" ref="dataSource"/>
        <property name="transactionManager" ref="transactionManager"/>
        <property name="databaseSchemaUpdate" value="true"/>
        <property name="jobExecutorActivate" value="false"/>
        <property name="history" value="full"/>
        <property name="processDefinitionCacheLimit" value="10"/>

        生成流程图的字体
        <property name="activityFontName" value="宋体"/>
        <property name="labelFontName" value="宋体"/>

       
        自动部署
        <property name="deploymentResources">
            <list>
                <value>classpath*:/deployments/*</value>
            </list>
        </property>

        自定义表单字段类型
        
    </bean>

    <bean id="processEngine" class="org.activiti.spring.ProcessEngineFactoryBean">
        <property name="processEngineConfiguration" ref="processEngineConfiguration"/>
    </bean>

    <bean id="repositoryService" factory-bean="processEngine" factory-method="getRepositoryService"/>
    <bean id="runtimeService" factory-bean="processEngine" factory-method="getRuntimeService"/>
    <bean id="formService" factory-bean="processEngine" factory-method="getFormService"/>
    <bean id="identityService" factory-bean="processEngine" factory-method="getIdentityService"/>
    <bean id="taskService" factory-bean="processEngine" factory-method="getTaskService"/>
    <bean id="historyService" factory-bean="processEngine" factory-method="getHistoryService"/>
    <bean id="managementService" factory-bean="processEngine" factory-method="getManagementService"/> -->
    <!-- Activiti end -->
</beans>
